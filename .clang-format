---
Language: Cpp
# BasedOnStyle:  Microsoft
AccessModifierOffset: '-2'
AlignAfterOpenBracket: DontAlign
AlignConsecutiveAssignments: 'false'
AlignConsecutiveBitFields: 'false'
AlignConsecutiveDeclarations: 'false'
AlignConsecutiveMacros: 'false'
AlignEscapedNewlines: Right
AlignOperands: 'true'
AlignTrailingComments: 'false'
AllowAllArgumentsOnNextLine: 'true'
AllowAllConstructorInitializersOnNextLine: 'true'
AllowAllParametersOfDeclarationOnNextLine: 'true'
AllowShortBlocksOnASingleLine: 'false'
AllowShortCaseLabelsOnASingleLine: 'true'
AllowShortFunctionsOnASingleLine: All
AllowShortIfStatementsOnASingleLine: Always
AllowShortLambdasOnASingleLine: Empty
AllowShortLoopsOnASingleLine: 'false'
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: 'false'
AlwaysBreakTemplateDeclarations: MultiLine
BinPackArguments: 'true'
BinPackParameters: 'true'
BraceWrapping:
  AfterCaseLabel:         true
  AfterClass:             true
  AfterControlStatement:  true
  AfterEnum:              true
  AfterFunction:          true
  AfterNamespace:         false
  AfterObjCDeclaration:   true
  AfterStruct:            true
  AfterUnion:             false
  AfterExternBlock:       true
  BeforeCatch:            false
  BeforeElse:             false
  BeforeLambdaBody:       false
  BeforeWhile:            false
  IndentBraces:           false
  SplitEmptyFunction:     true
  SplitEmptyRecord:       true
  SplitEmptyNamespace:    true
BreakAfterJavaFieldAnnotations: 'false'
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakBeforeTernaryOperators: 'true'
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeComma
BreakStringLiterals: 'false'
ColumnLimit: '0'
CommentPragmas: '^ IWYU pragma:'
CompactNamespaces: 'false'
ConstructorInitializerAllOnOneLineOrOnePerLine: 'false'
ConstructorInitializerIndentWidth: '2'
ContinuationIndentWidth: '2'
Cpp11BracedListStyle: 'true'
DeriveLineEnding: 'false'
DerivePointerAlignment: 'false'
DisableFormat: 'false'
ExperimentalAutoDetectBinPacking: 'false'
FixNamespaceComments: 'false'
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
IncludeBlocks: Preserve
IncludeCategories:
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        2
  - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
    Priority:        3
  - Regex:           '.*'
    Priority:        1
IncludeIsMainRegex: '(Test)?$'
IndentCaseBlocks: 'true'
IndentCaseLabels: 'true'
IndentExternBlock: 'Indent'
IndentGotoLabels: 'true'
IndentPPDirectives: None
IndentWidth: '2'
IndentWrappedFunctionNames: 'true'
# InsertTrailingCommas: 'TCS_None' # invalid for clang 11
JavaImportGroups: ['com.example', 'com', 'org']
JavaScriptQuotes: Leave
JavaScriptWrapImports: 'true'
KeepEmptyLinesAtTheStartOfBlocks: 'false'
MacroBlockBegin: ''
MacroBlockEnd: ''
MaxEmptyLinesToKeep: '1'
NamespaceIndentation: All
#NamespaceMacros: ''
ObjCBinPackProtocolList: Auto
ObjCBlockIndentWidth: '2'
ObjCBreakBeforeNestedBlockParam : 'false'
ObjCSpaceAfterProperty: 'false'
ObjCSpaceBeforeProtocolList: 'false'
PenaltyBreakAssignment: '4'
PenaltyBreakBeforeFirstCallParameter: '19'
PenaltyBreakComment: '300'
PenaltyBreakFirstLessLess: '120'
PenaltyBreakString: '1000'
PenaltyBreakTemplateDeclaration: '10'
PenaltyExcessCharacter: '1000000'
PenaltyReturnTypeOnItsOwnLine: '1000'
PointerAlignment: Left
#RawStringFormats: ''
ReflowComments: 'true'
SortIncludes: 'false'
SortUsingDeclarations: 'false'
SpaceAfterCStyleCast: 'false'
SpaceAfterLogicalNot: 'false'
SpaceAfterTemplateKeyword: 'false'
#SpaceAroundPointerQualifiers: 'SAPQ_After' # invalid for clang 11
SpaceBeforeAssignmentOperators: 'true'
SpaceBeforeCpp11BracedList: 'false'
SpaceBeforeCtorInitializerColon: 'false'
SpaceBeforeInheritanceColon: 'true'
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: 'true'
SpaceBeforeSquareBrackets: 'false'
SpaceInEmptyBlock: 'false'
SpaceInEmptyParentheses: 'false'
SpacesBeforeTrailingComments: '1'
SpacesInAngles: 'false'
SpacesInCStyleCastParentheses: 'false'
SpacesInConditionalStatement: 'false'
SpacesInContainerLiterals: 'false'
SpacesInParentheses: 'false'
SpacesInSquareBrackets: 'false'
Standard: Cpp11
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
TabWidth: '2'
#TypenameMacros: ''
UseCRLF: 'false'
UseTab: Always
...
